spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://172.26.16.151:3306/asset?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8
    username: root
    password: Mysql12315
    hikari:
      read-only: false #连接只读数据库时配置为true,保证安全
      #此属性控制客户端等待来自池的连接的最大毫秒数。超过此时间，则会抛出SQLException。最低可接受的连接超时时间为250 ms。 默认值：30000(30秒)
      connection-timeout: 60000
      idle-timeout: 60000   #池允许达到的最大大小，包括空闲和正在使用的连接  默认值：10
      validation-timeout: 3000 #连接将被测试活动的最大时间量
      max-lifetime: 60000  #一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒
      maximum-pool-size: 60  #池中最大连接数，包括闲置和使用中的连接
      minimum-idle: 10 #最小空闲连接数

  # mongodb local
  # data 和 datasource 设置同级才能使用设置的库
  data:
    mongodb:
      # 单机模式 mongodb://user:pwd@ip:port/database
      # 集群模式 mongodb://user:pwd@ip1:port1,ip2:port2/database
      # uri: "mongodb://127.0.0.1:27017/balance"
      uri: "mongodb://root:MongoDB12315@172.26.16.154:3717/transactions?authSource=admin"

  redis:
    database: 0
    host: 172.26.16.152 #内网链接
    port: 6379
    password: Redis12315
    timeout: 60000  # 连接超时时长（毫秒）
    lettuce:
      pool:
        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）
        max-wait: 60000   # -1ms  连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 100      # 连接池中的最大空闲连接
        min-idle: 50       # 连接池中的最小空闲连接

  application:
    name: block-chain
  cloud:
    nacos:
      discovery:
        server-addr: 8.142.35.7:8848
    sentinel:
      transport:
        dashboard: 8.142.35.7:8333
        port: 8719
      eager: true

WX: # 微信配置
  # 二维码拼接地址前缀
  CompetitionQrCodeUrl : "https://share.leyoukge.com:88/activity/pages/playMusic?Link="

BLOCKCC: #蜜蜂查API相关接口
  ApiKey: "DETVXFPNYUVEPTPDJXJR71XLB53MPTUQUMPAVFXL" #蜜蜂查API_KEY
# ApiKey: "N1HVKIUQSCGRARKR3NMGYEB21WI20V8SNUDHJBTA" #蜜蜂查API_KEY
  KlineUrl: "https://data.mifengcha.com/api/v3/kline?desc=" #获取交易对K线数据
  PriceUrl: "https://data.mifengcha.com/api/v3/price?symbol=" #获取币种价格
  RateUrl: "https://data.mifengcha.com/api/v3/exchange_rate" #获取法币汇率

EXTERNA: #调用其他系统的相关路径
  BalanceUrl: "http://localhost:7111/account/getBalance?address=" #获取地址下余额和资产信息
  TxListUrl: "http://localhost:7111/account/getTxList?address=" #获取地址下交易记录信息
  TransferUrl: "https://wallet.ullapay.com/account/sendUniswapTransaction" #获取地址下交易记录信息
  NewAddressUrl: "https://wallet.ullapay.com/scanner/newAddress" #用户地址录入时 - 实时扫链接口(用户交易记录入库)
  ISVALIDADDRESSURL: "https://wallet.ullapay.com/chainkey/isValidAddress"#校验判断地址是否正确
  QuotationUrl: "http://47.242.240.167:5006/binance/getQuotation"#获取需要特殊处理的币种价格 ARBI_ARB



BUSSINESS: #调用业务接口相关路径 - 生产环境
  BUSSINESSURL: "https://app.ullapay.com"
  SAVEBUYOREXCHANGEURL: "/exchange/white/saveBuyOrExchange" #业务方提供 -保存购买、兑换订单接口
  ORDERNOTIFICATIONURL: "/exchange/white/orderNotification" #业务方提供 - 兑换/购买发送通知接口
  SelectMemberByAddressUrl: "https://app.ullapay.com/member/memberAddress/selectMemberByAddress" #业务方提供 - 根据地址查询会员数量


EXCHANGENOW: #调用exchange now跨链桥相关业务接口 - 测试环境
  XCHANGENOWAPIKEY: "caeb8942e91a08ab212ef921c4f18f73acaaaf655b7fbbd651dea4a7bbb70f1f" #Exchange now API KEY
  AVAILABLEPAIRSURL: "https://api.changenow.io/v2/exchange/available-pairs" #Exchange Now 可用币对查询接口
  AVAILABLECURRENCIES: "https://api.changenow.io/v2/exchange/currencies"#Exchange Now 可用币种查询接口
  MINAMOUNTURL: "https://api.changenow.io/v2/exchange/min-amount"#调用exchange now API发出币最低兑换到的得到币数量接口
  ESTIMATEDAMOUNTURL: "https://api.changenow.io/v2/exchange/estimated-amount"#调用exchange now API发出币最低兑换到的得到币数量接口
  EXCHANGEURL: "https://api.changenow.io/v2/exchange"#跨链桥 - 调用exchange now跨链桥创建兑换交易
  TRANSACTIONSTATUSURL: "https://api.changenow.io/v2/exchange/by-id"#跨链桥 - 根据跨链桥订单Id获取跨链桥订单交易状态


RATE: #汇率集成相关请求接口
  FOREXRATEURL: "https://api.it120.cc/gooking/forex/rate" #汇率查询接口
  ACCESSKEY: "1f4c2f6e4ca518bac2d361e64515aa0f" #汇率查询补充接口的API KEY
  APILAYERURL: "http://apilayer.net/api/live" #汇率查询补充接口


MESSAGE: #消息推送相关接口
  WOWSENDURL: "https://datastream.ullapay.com/data-analyse/send/wowSend" #WOW-发送消息